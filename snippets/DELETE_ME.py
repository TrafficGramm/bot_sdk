# TODO: Delete me

import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import Command
from aiogram.types import Message

logging.basicConfig(level=logging.INFO)

from config import BOT_TOKEN
CHANNEL_ID = -1002096051693

bot = Bot(BOT_TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

async def is_user_subscribed(user_id: int, channel_id: int) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å–æ—Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–∞–Ω–∞–ª–µ (—Å—Ç–∞—Ç—É—Å MEMBER, ADMIN, OWNER)
    """
    try:
        member = await bot.get_chat_member(channel_id, user_id)
        return member.status in ('member', 'administrator', 'creator')
    except Exception as e:
        logging.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

@dp.message(Command("check"))
async def check_subscription(message: Message):
    user_id = message.from_user.id
    # –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å username, –º–æ–∂–Ω–æ CHANNEL_ID = "@my_channel"
    subscribed = await is_user_subscribed(user_id, CHANNEL_ID)
    if subscribed:
        await message.answer("‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª!")
    else:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª
        if str(CHANNEL_ID).startswith("-100"):
            # –ï—Å–ª–∏ chat_id, —Ç–æ –Ω—É–∂–Ω–æ –∏–º–µ—Ç—å username –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–π —Å—Å—ã–ª–∫–∏
            channel_link = "https://t.me/your_channel_username"  # –ó–∞–º–µ–Ω–∏!
        else:
            channel_link = f"https://t.me/{CHANNEL_ID.lstrip('@')}"
        await message.answer(
            f"üö´ –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: <a href='{channel_link}'>–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª</a>",
            disable_web_page_preview=True
        )

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
